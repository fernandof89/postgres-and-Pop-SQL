--USEFUL COMMANDS REGULARLY USED FOR FREECODECAMP RELATIONAL DATABASE CERTIFICATION

--Activate DB from User
psql --username=freecodecamp dbname=mario_database 

--Add rows
 INSERT INTO more_info(birthday, height, weight, character_id) VALUES('1959-10-18', 13, 52.2, 3),(),();

--Delete rows
DELETE FROM more_info WHERE character_id=3;

--Select with condition
SELECT character_id, name FROM characters WHERE name='Toad'

--Rename columns
ALTER TABLE more_info RENAME COLUMN height TO height_in_cm

--Create tables with columns from beginning
CREATE TABLE table_name(column_name DATATYPE CONSTRAINTS);

--Add columns and constrains
ALTER TABLE sounds ADD COLUMN filename VARCHAR(40) NOT NULL UNIQUE;

--Add Primary Key
ALTER TABLE test1 ADD COLUMN id SERIAL PRIMARY KEY;

--Add Foreign Key
ALTER TABLE table_name ADD COLUMN column_name DATATYPE CONSTRAINT REFERENCES referenced_table_name(referenced_column_name);

--Set existing column as foreign key
ALTER TABLE table_name ADD FOREIGN KEY(column_name) REFERENCES referenced_table(referenced_column);

--Create a composite primary key
ALTER TABLE table_name ADD PRIMARY KEY(column1, column2);

--Get data from two tables with Join
SELECT columns FROM table_1 FULL JOIN table_2 ON table_1.primary_key_column = table_2.foreign_key_column;

--3 tables join
SELECT columns FROM junction_table
FULL JOIN table_1 ON junction_table.foreign_key_column = table_1.primary_key_column
FULL JOIN table_2 ON junction_table.foreign_key_column = table_2.primary_key_column;

--[AGREGGATIONS]

--Select to nearest Integer
SELECT FLOOR(AVG(POPULATION)) FROM CITY

--Using of rounded to next Integer and function Replace (changes from datatype to another automatically(?)
SELECT CEIL(AVG(Salary) - AVG(REPLACE(Salary,'0',''))) FROM EMPLOYEES;

--Group by 1 or Order by 1 meaning:
--means - group by first column from SELECT . The same pattern could be used for ORDER BY :

--Round and Truncate of decimals x
ROUND(num, x) / TRUNCATE(num, x)

--Query 1 column with a condition from another
SELECT ROUND(LONG_W, 4) 
FROM STATION
WHERE 
    LAT_N = (SELECT MAX(LAT_N)
            FROM STATION
            WHERE LAT_N < 137.2345);
            
--Square and Square root
POWER(num, x) / SQRT()

--Change Primary_key (or other column) nane
ALTER TABLE dishes RENAME COLUMN name TO d_name;

--Generate a View / UNION
https://www.youtube.com/watch?v=8jU8SrAPn9c
